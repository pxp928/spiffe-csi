---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  name: spiffeids.spiffeid.spiffe.io
spec:
  group: spiffeid.spiffe.io
  names:
    kind: SpiffeID
    listKind: SpiffeIDList
    plural: spiffeids
    singular: spiffeid
  scope: Namespaced
  versions:
  - name: v1beta1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: SpiffeID is the Schema for the spiffeid API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SpiffeIDSpec defines the desired state of SpiffeID
            properties:
              dnsNames:
                items:
                  type: string
                type: array
              federatesWith:
                items:
                  type: string
                type: array
              parentId:
                type: string
              selector:
                properties:
                  arbitrary:
                    description: Arbitrary selectors
                    items:
                      type: string
                    type: array
                  containerImage:
                    description: Container image to match for this spiffe ID
                    type: string
                  containerName:
                    description: Container name to match for this spiffe ID
                    type: string
                  namespace:
                    description: Namespace to match for this spiffe ID
                    type: string
                  nodeName:
                    description: Node name to match for this spiffe ID
                    type: string
                  podLabel:
                    additionalProperties:
                      type: string
                    description: Pod label name/value to match for this spiffe ID
                    type: object
                  podName:
                    description: Pod name to match for this spiffe ID
                    type: string
                  podUid:
                    description: Pod UID to match for this spiffe ID
                    type: string
                  serviceAccount:
                    description: ServiceAccount to match for this spiffe ID
                    type: string
                  cluster:
                    description: The k8s_psat cluster name
                    type: string
                  agent_node_uid:
                    description: UID of the node
                    type: string
                type: object
              spiffeId:
                type: string
            required:
            - parentId
            - selector
            - spiffeId
            type: object
          status:
            description: SpiffeIDStatus defines the observed state of SpiffeID
            properties:
              entryId:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
            type: object
        type: object
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-k8s-registrar
  namespace: spire
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-workload-registrar
  namespace: spire
data:
  registrar.conf: |
    log_level = "debug"
    mode = "crd"
    trust_domain = "example.org"
    # enable when direct socket access to SPIRE Server available:
    # server_socket_path = "/run/spire/sockets/registration.sock"
    agent_socket_path = "/run/spire/sockets/spire-agent.sock"
    server_address = "spire-server.spire.svc.cluster.local:8081"
    cluster = "example-cluster"
    # enable for label based registration:
    # pod_label = "spire-workload-id"
    # enable for annotation based registration:
    pod_annotation = "spiffe.io/spiffe-id"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-k8s-registrar-spire-cluster-role
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "endpoints", "configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["endpoints", "nodes", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids/status"]
    verbs: ["get", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-k8s-registrar-spire-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-k8s-registrar-spire-cluster-role
subjects:
  - kind: ServiceAccount
    name: spire-k8s-registrar
    namespace: spire
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spire-k8s-registrar-spire-role
  namespace: spire
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["controller-leader-election-helper"]
    verbs: ["update", "get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spire-k8s-registrar-spire-role-binding
  namespace: spire
subjects:
  - kind: ServiceAccount
    name: spire-k8s-registrar
    namespace: spire
roleRef:
  kind: Role
  name: spire-k8s-registrar-spire-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spire-registrar
  namespace: spire
  labels:
    app: spire-registrar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spire-registrar
  template:
    metadata:
      namespace: spire
      labels:
        app: spire-registrar
    spec:
      serviceAccountName: spire-k8s-registrar
      shareProcessNamespace: true
      containers:
        - name: k8s-workload-registrar
          #image: k8s-workload-registrar:latest
          image: gcr.io/spiffe-io/k8s-workload-registrar:1.1.1
          imagePullPolicy: Always
          args:
            - -config
            - /run/k8s-workload-registrar/config/registrar.conf
          volumeMounts:
            - name: spiffe-workload-api
              mountPath: "/run/spire/sockets/"
              readOnly: false
            - name: k8s-workload-registrar-config
              mountPath: /run/k8s-workload-registrar/config
              readOnly: true
      volumes:
        - name: spiffe-workload-api
          csi:
            driver: "csi.spiffe.io"
        - name: k8s-workload-registrar-config
          configMap:
            name: k8s-workload-registrar
